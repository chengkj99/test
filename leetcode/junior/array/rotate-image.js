// 旋转图像
// 给定一个 n × n 的二维矩阵表示一个图像。

// 将图像顺时针旋转 90 度。

// 说明：
// 你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。

// 示例 1:
// 给定 matrix =
// [
//   [1,2,3],
//   [4,5,6],  =>
//   [7,8,9]
// ],
// 原地旋转输入矩阵，使其变为:
// [
//   [7,4,1],
//   [8,5,2],
//   [9,6,3]
// ]

// 示例 2:
// 给定 matrix =
// [
//   [ 5, 1, 9,11],
//   [ 2, 4, 8,10],
//   [13, 3, 6, 7],
//   [15,14,12,16]
// ],
// 原地旋转输入矩阵，使其变为:
// [
//   [15,13, 2, 5],
//   [14, 3, 4, 1],
//   [12, 6, 8, 9],
//   [16, 7,10,11]
// ]

/**
 * @param {number[][]} matrix
 * @return {void} Do not return anything, modify matrix in-place instead.
 */
// 转置加翻转
var rotate = function(matrix) {
  let len = matrix.length
  // 转置 transpose matrix
  for (let i = 0; i < len; i++) {
    for (let j = i; j < len; j++) {
      let temp = matrix[i][j]
      matrix[i][j] = matrix[j][i]
      matrix[j][i] = temp
    }
  }
  // 翻转 reverse each row
  for (let i = 0; i < len; i++) {
    matrix[i].reverse()
  }
  return matrix
}

// 00, 01, 02
// 10, 11, 12
// 20, 21, 22
// 给定 matrix =
// [
//   [1,2,3],
//   [4,5,6],  =>
//   [7,8,9]
// ],

// 转置矩阵：行列交换
// [
//   [1,4,7],
//   [2,5,8], =>
//   [3,6,9]
// ]

// 行反转：
// [
//   [7,4,1],
//   [8,5,2],
//   [9,6,3]
// ]
// 原地旋转输入矩阵,使其变为:
// [
//   [7,4,1],
//   [8,5,2],
//   [9,6,3]
// ]

let arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

// let arr = [
//   [1, 2, 3, 4, 5],
//   [6, 7, 8, 9, 10],
//   [11, 12, 13, 14, 15],
//   [16, 17, 18, 19, 20],
//   [21, 22, 23, 24, 25]
// ]
console.log(rotate(arr))
